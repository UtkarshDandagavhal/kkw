WT
Movie.php
<?php
$doc=new DOMDocument();
$doc->load("movie.xml");
echo"<h1> Movie Info</h1>";
$Mtitle=$doc->getElementsByTagName("MovieTitle");
$Aname=$doc->getElementsByTagName("ActorName");
echo "<br><br>Movie Title:<br>";
foreach($Mtitle as $value)
{
echo "<br>".$value->textContent;
}
echo "<br><br> Actor Name:<br>";
foreach($Aname as $value)
{
echo "<br>".$value->textContent;
}
?>
• Movie.xml
<?xml version='1.0' encoding ='UTF-8' ?>
<MovieInfo>
<movie>
<MovieNo> 1 </MovieNo>
<MovieTitle> Mission Mangal</MovieTitle>
<ActorName>Akshay Kumar</ActorName>
<ReleaseYear>2019</ReleaseYear>
</movie>
<movie>
<MovieNo> 2 </MovieNo>
<MovieTitle>RRR </MovieTitle>
<ActorName> Ram Charan</ActorName>
<ReleaseYear> 2022 </ReleaseYear>
</movie>
<movie>
<MovieNo> 3 </MovieNo>
<MovieTitle> 3 idiots </MovieTitle>
<ActorName>Amir Khan</ActorName>
<ReleaseYear> 2009 </ReleaseYear>
</movie>
<movie>
<MovieNo> 4 </MovieNo>
<MovieTitle> Chhichore </MovieTitle>
<ActorName> Sushant singh Rajput</ActorName>
<ReleaseYear> 2019 </ReleaseYear>
</movie><movie>
<MovieNo> 5 </MovieNo>
<MovieTitle> Uri </MovieTitle>
<ActorName> Vicky Kaushal</ActorName>
<ReleaseYear> 2019 </ReleaseYear>
</movie>
</MovieInfo>
DA
import pandas as pd
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import preprocessing
from sklearn.linear_model import LogisticRegression
from sklearn import metrics
import seaborn as sn
import matplotlib.pyplot as plt

iris = pd.read_csv("/home/pc256/Documents/TY(21-22)Sem-II/Iris.csv")
print('Iris-setosa')
setosa = iris['Species'] == 'Iris-setosa'
print(iris[setosa].describe())
print('\nIris-versicolor')
setosa = iris['Species'] == 'Iris-versicolor'
print(iris[setosa].describe())
print('\nIris-virginica')
setosa = iris['Species'] == 'Iris-virginica'
print(iris[setosa].describe())
x = iris.iloc[:, [2,3]].values 
y = iris.iloc[:,4].values 
x_train,x_test,y_train,y_test = train_test_split(x, y, test_size = 0.25, random_state =2)
logistic_regression= LogisticRegression()
logistic_regression.fit(x_train,y_train)
y_pred=logistic_regression.predict(x_test)
confusion_matrix = pd.crosstab(y_test, y_pred, rownames=['Actual'], colnames=['Predicted'])
sn.heatmap(confusion_matrix, annot=True)
print('Accuracy: ',metrics.accuracy_score(y_test, y_pred))
plt.show()
